package com.eteng.mobileorder.models;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.eteng.mobileorder.models.SellerInfo;
import com.eteng.mobileorder.models.CategoryInfo;
import com.eteng.mobileorder.models.DishInfo;
import com.eteng.mobileorder.models.CustomerInfo;
import com.eteng.mobileorder.models.RemarkInfo;

import com.eteng.mobileorder.models.SellerInfoDao;
import com.eteng.mobileorder.models.CategoryInfoDao;
import com.eteng.mobileorder.models.DishInfoDao;
import com.eteng.mobileorder.models.CustomerInfoDao;
import com.eteng.mobileorder.models.RemarkInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig sellerInfoDaoConfig;
    private final DaoConfig categoryInfoDaoConfig;
    private final DaoConfig dishInfoDaoConfig;
    private final DaoConfig customerInfoDaoConfig;
    private final DaoConfig remarkInfoDaoConfig;

    private final SellerInfoDao sellerInfoDao;
    private final CategoryInfoDao categoryInfoDao;
    private final DishInfoDao dishInfoDao;
    private final CustomerInfoDao customerInfoDao;
    private final RemarkInfoDao remarkInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        sellerInfoDaoConfig = daoConfigMap.get(SellerInfoDao.class).clone();
        sellerInfoDaoConfig.initIdentityScope(type);

        categoryInfoDaoConfig = daoConfigMap.get(CategoryInfoDao.class).clone();
        categoryInfoDaoConfig.initIdentityScope(type);

        dishInfoDaoConfig = daoConfigMap.get(DishInfoDao.class).clone();
        dishInfoDaoConfig.initIdentityScope(type);

        customerInfoDaoConfig = daoConfigMap.get(CustomerInfoDao.class).clone();
        customerInfoDaoConfig.initIdentityScope(type);

        remarkInfoDaoConfig = daoConfigMap.get(RemarkInfoDao.class).clone();
        remarkInfoDaoConfig.initIdentityScope(type);

        sellerInfoDao = new SellerInfoDao(sellerInfoDaoConfig, this);
        categoryInfoDao = new CategoryInfoDao(categoryInfoDaoConfig, this);
        dishInfoDao = new DishInfoDao(dishInfoDaoConfig, this);
        customerInfoDao = new CustomerInfoDao(customerInfoDaoConfig, this);
        remarkInfoDao = new RemarkInfoDao(remarkInfoDaoConfig, this);

        registerDao(SellerInfo.class, sellerInfoDao);
        registerDao(CategoryInfo.class, categoryInfoDao);
        registerDao(DishInfo.class, dishInfoDao);
        registerDao(CustomerInfo.class, customerInfoDao);
        registerDao(RemarkInfo.class, remarkInfoDao);
    }
    
    public void clear() {
        sellerInfoDaoConfig.getIdentityScope().clear();
        categoryInfoDaoConfig.getIdentityScope().clear();
        dishInfoDaoConfig.getIdentityScope().clear();
        customerInfoDaoConfig.getIdentityScope().clear();
        remarkInfoDaoConfig.getIdentityScope().clear();
    }

    public SellerInfoDao getSellerInfoDao() {
        return sellerInfoDao;
    }

    public CategoryInfoDao getCategoryInfoDao() {
        return categoryInfoDao;
    }

    public DishInfoDao getDishInfoDao() {
        return dishInfoDao;
    }

    public CustomerInfoDao getCustomerInfoDao() {
        return customerInfoDao;
    }

    public RemarkInfoDao getRemarkInfoDao() {
        return remarkInfoDao;
    }

}
